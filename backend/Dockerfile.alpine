# -- Build stage --
FROM node:20-alpine AS build
WORKDIR /app

# Copy package files
COPY package.json pnpm-lock.yaml* package-lock.json* yarn.lock* ./

# Install dependencies
RUN if [ -f pnpm-lock.yaml ]; then npm i -g pnpm@10 && pnpm i --frozen-lockfile; \
    elif [ -f yarn.lock ]; then corepack enable && yarn install --frozen-lockfile; \
    elif [ -f package-lock.json ]; then npm ci; else npm install; fi

# Copy source code
COPY . .

# Build the application
RUN npm run build

# -- Runtime stage --
FROM node:20-alpine AS runtime
WORKDIR /app

# Set environment
ENV NODE_ENV=production

# Copy built application and dependencies
COPY --from=build /app/package.json ./
COPY --from=build /app/dist ./dist
COPY --from=build /app/config ./config
COPY --from=build /app/docs ./docs
COPY --from=build /app/scripts ./scripts

# Install only production dependencies
RUN npm install --only=production

# Copy init script (without PostgreSQL client dependency)
COPY scripts/init-db.sh ./
RUN chmod +x ./init-db.sh

EXPOSE 8080
CMD ["node", "dist/index.js"]
